<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>love-baby</groupId>
    <artifactId>love-baby-eureka</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <spring-cloud.version>Finchley.RC1</spring-cloud.version>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.0.RELEASE</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/libs-milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <build>
        <plugins>
            <!--<plugin>-->
                <!--<groupId>org.codehaus.mojo</groupId>-->
                <!--<artifactId>appassembler-maven-plugin</artifactId>-->
                <!--<version>2.0.0</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>Make Assembly</id>-->
                        <!--<phase>package</phase>-->
                        <!--<goals>-->
                            <!--<goal>assemble</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
                <!--<configuration>-->
                    <!--&lt;!&ndash; 生成linux, windows两种平台的执行脚本 &ndash;&gt;-->
                    <!--<binFileExtensions>-->
                        <!--<unix>.sh</unix>-->
                    <!--</binFileExtensions>-->
                    <!--<platforms>-->
                        <!--<platform>windows</platform>-->
                        <!--<platform>unix</platform>-->
                    <!--</platforms>-->
                    <!--&lt;!&ndash; 根目录 &ndash;&gt;-->
                    <!--<assembleDirectory>${project.build.directory}/mall</assembleDirectory>-->
                    <!--&lt;!&ndash; 打包的jar，以及maven依赖的jar放到这个目录里面 &ndash;&gt;-->
                    <!--<repositoryName>lib</repositoryName>-->
                    <!--&lt;!&ndash; 可执行脚本的目录 &ndash;&gt;-->
                    <!--<binFolder>bin</binFolder>-->
                    <!--&lt;!&ndash; 配置文件的目标目录 &ndash;&gt;-->
                    <!--<configurationDirectory>conf</configurationDirectory>-->
                    <!--&lt;!&ndash; 拷贝配置文件到上面的目录中 &ndash;&gt;-->
                    <!--<copyConfigurationDirectory>true</copyConfigurationDirectory>-->
                    <!--&lt;!&ndash; 从哪里拷贝配置文件 (默认src/main/config) &ndash;&gt;-->
                    <!--<configurationSourceDirectory>src/main/resources</configurationSourceDirectory>-->
                    <!--&lt;!&ndash; lib目录中jar的存放规则，默认是${groupId}/${artifactId}的目录格式，flat表示直接把jar放到lib目录 &ndash;&gt;-->
                    <!--<repositoryLayout>flat</repositoryLayout>-->
                    <!--<encoding>UTF-8</encoding>-->
                    <!--<logsDirectory>logs</logsDirectory>-->
                    <!--<tempDirectory>tmp</tempDirectory>-->
                    <!--<extraJvmArguments>-Xms128m</extraJvmArguments>-->
                    <!--<programs>-->
                        <!--<program>-->
                            <!--<id>start</id>-->
                            <!--&lt;!&ndash; 启动类 &ndash;&gt;-->
                            <!--<mainClass>com.love.baby.eureka.EurekaApplication</mainClass>-->
                            <!--<jvmSettings>-->
                                <!--<extraArguments>-->
                                    <!--<extraArgument>-server</extraArgument>-->
                                    <!--<extraArgument>-Xmx1G</extraArgument>-->
                                    <!--<extraArgument>-Xms1G</extraArgument>-->
                                <!--</extraArguments>-->
                            <!--</jvmSettings>-->
                        <!--</program>-->
                    <!--</programs>-->
                <!--</configuration>-->
            <!--</plugin>-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>appassembler-maven-plugin</artifactId>
                <version>2.0.0</version>
                <executions>
                    <execution>
                        <id>generate-jsw-scripts</id>
                        <phase>package</phase>
                        <goals>
                            <goal>generate-daemons</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <assembleDirectory>${project.build.directory}/mall</assembleDirectory>
                    <!-- 打包的jar，以及maven依赖的jar放到这个目录里面 -->
                    <repositoryName>lib</repositoryName>
                    <!-- 可执行脚本的目录 -->
                    <binFolder>bin</binFolder>
                    <!-- 配置文件的目标目录 -->
                    <configurationDirectory>conf</configurationDirectory>
                    <!-- 拷贝配置文件到上面的目录中 -->
                    <copyConfigurationDirectory>true</copyConfigurationDirectory>
                    <!-- 从哪里拷贝配置文件 (默认src/main/config) -->
                    <configurationSourceDirectory>src/main/resources</configurationSourceDirectory>
                    <!-- lib目录中jar的存放规则，默认是${groupId}/${artifactId}的目录格式，flat表示直接把jar放到lib目录 -->
                    <repositoryLayout>flat</repositoryLayout>
                    <encoding>UTF-8</encoding>
                    <logsDirectory>logs</logsDirectory>
                    <daemons>
                        <daemon>
                            <id>WAREHOUSE-WEB</id>
                            <mainClass>com.love.baby.eureka.EurekaApplication</mainClass>
                            <platforms>
                                <platform>jsw</platform>
                            </platforms>
                            <generatorConfigurations>
                                <generatorConfiguration>
                                    <generator>jsw</generator>
                                    <includes>
                                        <include>linux-x86-32</include>
                                        <include>linux-x86-64</include>
                                        <include>windows-x86-32</include>
                                        <include>windows-x86-64</include>
                                    </includes>
                                    <configuration>
                                        <property>
                                            <name>configuration.directory.in.classpath.first</name>
                                            <value>conf</value>
                                        </property>
                                        <property>
                                            <name>wrapper.ping.timeout</name>
                                            <value>120</value>
                                        </property>
                                        <property>
                                            <name>set.default.REPO_DIR</name>
                                            <value>lib</value>
                                        </property>
                                        <property>
                                            <name>wrapper.logfile</name>
                                            <value>logs/wrapper.log</value>
                                        </property>
                                    </configuration>
                                </generatorConfiguration>
                            </generatorConfigurations>
                            <jvmSettings>
                                <!-- jvm参数 -->
                                <systemProperties>
                                    <systemProperty>com.sun.management.jmxremote</systemProperty>
                                    <systemProperty>com.sun.management.jmxremote.port=1984</systemProperty>
                                    <systemProperty>com.sun.management.jmxremote.authenticate=false</systemProperty>
                                    <systemProperty>com.sun.management.jmxremote.ssl=false</systemProperty>
                                </systemProperties>
                                <extraArguments>
                                    <extraArgument>-server</extraArgument>
                                </extraArguments>
                            </jvmSettings>
                        </daemon>
                    </daemons>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <target>1.8</target>
                    <source>1.8</source>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>